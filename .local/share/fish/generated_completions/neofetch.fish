# neofetch
# Autogenerated from man page /usr/local/share/man/man1/neofetch.1.gz
complete -c neofetch -l disable -d 'Allows you to disable an info line from appearing in the output'
complete -c neofetch -l title_fqdn -d 'Hide/Show Fully Qualified Domain Name in title'
complete -c neofetch -l package_managers -d 'Hide/Show Package Manager names .  (on, tiny, off)'
complete -c neofetch -l os_arch -d 'Hide/Show OS architecture'
complete -c neofetch -l speed_type -d 'Change the type of cpu speed to display'
complete -c neofetch -l speed_shorthand -d 'Whether or not to show decimals in CPU speed'
complete -c neofetch -l cpu_brand -d 'Enable/Disable CPU brand in output'
complete -c neofetch -l cpu_cores -d 'Whether or not to display the number of CPU cores Possible values: logical, p…'
complete -c neofetch -l cpu_speed -d 'Hide/Show cpu speed'
complete -c neofetch -l cpu_temp -d 'Hide/Show cpu temperature'
complete -c neofetch -l distro_shorthand -d 'Shorten the output of distro (on, tiny, off)'
complete -c neofetch -l kernel_shorthand -d 'Shorten the output of kernel'
complete -c neofetch -l uptime_shorthand -d 'Shorten the output of uptime (on, tiny, off)'
complete -c neofetch -l refresh_rate -d 'Whether to display the refresh rate of each monitor Unsupported on Windows'
complete -c neofetch -l gpu_brand -d 'Enable/Disable GPU brand in output.  (AMD/NVIDIA/Intel)'
complete -c neofetch -l gpu_type -d 'Which GPU to display.  (all, dedicated, integrated)'
complete -c neofetch -l de_version -d 'Show/Hide Desktop Environment version'
complete -c neofetch -l gtk_shorthand -d 'Shorten output of gtk theme/icons'
complete -c neofetch -l gtk2 -d 'Enable/Disable gtk2 theme/font/icons output'
complete -c neofetch -l gtk3 -d 'Enable/Disable gtk3 theme/font/icons output'
complete -c neofetch -l shell_path -d 'Enable/Disable showing $SHELL path'
complete -c neofetch -l shell_version -d 'Enable/Disable showing $SHELL version'
complete -c neofetch -l disk_show -d 'Which disks to display'
complete -c neofetch -l disk_subtitle -d 'What information to append to the Disk subtitle'
complete -c neofetch -l disk_percent -d 'Hide/Show disk percent'
complete -c neofetch -l ip_host -d 'URL to query for public IP'
complete -c neofetch -l ip_timeout -d 'Public IP timeout (in seconds)'
complete -c neofetch -l song_format -d 'Print the song data in a specific format (see config file)'
complete -c neofetch -l song_shorthand -d 'Print the Artist/Album/Title on separate lines'
complete -c neofetch -l memory_percent -d 'Display memory percentage'
complete -c neofetch -l music_player -d 'Manually specify a player to use'
complete -c neofetch -l colors -d 'Changes the text colors in this order: title, @, underline, subtitle, colon, …'
complete -c neofetch -l underline -d 'Enable/Disable the underline'
complete -c neofetch -l underline_char -d 'Character to use when underlining title'
complete -c neofetch -l bold -d 'Enable/Disable bold text'
complete -c neofetch -l separator -d 'Changes the default \':\' separator to the specified string. SS "COLOR BLOCKS:"'
complete -c neofetch -l color_blocks -d 'Enable/Disable the color blocks'
complete -c neofetch -l col_offset -d 'Left-padding of color blocks'
complete -c neofetch -l block_width -d 'Width of color blocks in spaces'
complete -c neofetch -l block_height -d 'Height of color blocks in lines'
complete -c neofetch -l block_range -d 'Range of colors to print as blocks . SS "BARS:"'
complete -c neofetch -l bar_char -d 'Characters to use when drawing bars'
complete -c neofetch -l bar_border -d 'Whether or not to surround the bar with \'[]\''
complete -c neofetch -l bar_length -d 'Length in spaces to make the bars'
complete -c neofetch -l bar_colors -d 'Colors to make the bar.  Set in this order: elapsed, total'
complete -c neofetch -l cpu_display -d 'Bar mode.  Possible values: bar, infobar, barinfo, off'
complete -c neofetch -l memory_display -d 'Bar mode.  Possible values: bar, infobar, barinfo, off'
complete -c neofetch -l battery_display -d 'Bar mode.  Possible values: bar, infobar, barinfo, off'
complete -c neofetch -l disk_display -d 'Bar mode.  Possible values: bar, infobar, barinfo, off . SS "IMAGE BACKEND:"'
complete -c neofetch -l backend -d 'Which image backend to use'
complete -c neofetch -l source -d 'Which image or ascii file to use'
complete -c neofetch -l ascii -d 'Shortcut to use \'ascii\' backend'
complete -c neofetch -l caca -d 'Shortcut to use \'caca\' backend'
complete -c neofetch -l chafa -d 'Shortcut to use \'chafa\' backend'
complete -c neofetch -l iterm2 -d 'Shortcut to use \'iterm2\' backend'
complete -c neofetch -l jp2a -d 'Shortcut to use \'jp2a\' backend'
complete -c neofetch -l kitty -d 'Shortcut to use \'kitty\' backend'
complete -c neofetch -l pixterm -d 'Shortcut to use \'pixterm\' backend'
complete -c neofetch -l sixel -d 'Shortcut to use \'sixel\' backend'
complete -c neofetch -l termpix -d 'Shortcut to use \'termpix\' backend'
complete -c neofetch -l tycat -d 'Shortcut to use \'tycat\' backend'
complete -c neofetch -l w3m -d 'Shortcut to use \'w3m\' backend'
complete -c neofetch -l off -d 'Shortcut to use \'off\' backend (Disable ascii art)'
complete -c neofetch -l ascii_colors -d 'Colors to print the ascii art'
complete -c neofetch -l ascii_distro -d 'Which Distro\'s ascii art to print'
complete -c neofetch -l ascii_bold -d 'Whether or not to bold the ascii logo'
complete -c neofetch -s L -l logo -d 'Hide the info text and only show the ascii logo. SS "IMAGE:"'
complete -c neofetch -l loop -d 'Redraw the image constantly until Ctrl+C is used'
complete -c neofetch -l size -l size -d 'How to size the image.  Possible values: auto, 00px, 00%, none'
complete -c neofetch -l crop_mode -d 'Which crop mode to use Takes the values: normal, fit, fill'
complete -c neofetch -l crop_offset -d 'Change the crop offset for normal mode'
complete -c neofetch -l xoffset -d 'How close the image will be to the left edge of the window'
complete -c neofetch -l yoffset -d 'How close the image will be to the top edge of the window'
complete -c neofetch -l bg_color -d 'Background color to display behind transparent image'
complete -c neofetch -l gap -d 'Gap between image and text'
complete -c neofetch -l clean -d 'Delete cached files and thumbnails. SS "OTHER:"'
complete -c neofetch -l config -d 'Specify a path to a custom config file'
complete -c neofetch -l no_config -d 'Don\'t create the user config file'
complete -c neofetch -l print_config -d 'Print the default config file to stdout'
complete -c neofetch -l stdout -d 'Turn off all colors and disables any ASCII/image backend'
complete -c neofetch -l help -d 'Print this text and exit'
complete -c neofetch -l version -d 'Show neofetch version'
complete -c neofetch -s v -d 'Display error messages'
complete -c neofetch -o vv -d 'Display a verbose log for error reporting. SS "DEVELOPER:"'
complete -c neofetch -l gen-man -d 'Generate a manpage for Neofetch in your PWD'

